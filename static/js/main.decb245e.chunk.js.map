{"version":3,"sources":["Components/RoutingMenu/RoutingMenu.jsx","Components/Map/index.js","Components/Map/Map.jsx","Components/GeopsRoutingDemo/GeopsRoutingDemo.jsx","Components/index.js","serviceWorker.js","index.js"],"names":["TabPanel","props","children","value","index","other","Typography","component","role","hidden","id","aria-labelledby","Box","p","RoutingMenu","React","useState","setValue","className","Paper","square","elevation","Tabs","onChange","event","newValue","variant","scrollButtons","indicatorColor","textColor","aria-label","Tab","icon","Grid","container","spacing","alignItems","style","width","item","xs","fontSize","color","TextField","label","IconButton","gutterBottom","Map","applicationVersion","process","stamenTonerLite","L","tileLayer","attribution","subdomains","minZoom","maxZoom","ext","this","map","center","zoom","zoomControl","layers","control","position","addTo","Component","GeopsRoutingDemo","Boolean","window","location","hostname","match","geopsRoutingDemo","mots","routingUrl","stationSearchUrl","key","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.decb245e.chunk.js","sourcesContent":["import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DirectionsBusIcon from '@material-ui/icons/DirectionsBus';\r\nimport DirectionsBoatIcon from '@material-ui/icons/DirectionsBoat';\r\nimport RowingIcon from '@material-ui/icons/Rowing';\r\nimport TramIcon from '@material-ui/icons/Tram';\r\nimport DirectionsRailwayIcon from '@material-ui/icons/DirectionsRailway';\r\nimport DirectionsSubwayIcon from '@material-ui/icons/DirectionsSubway';\r\nimport CallMergeIcon from '@material-ui/icons/CallMerge';\r\nimport SubwayIcon from '@material-ui/icons/Subway';\r\n\r\nimport Adjust from '@material-ui/icons/Adjust';\r\nimport Room from '@material-ui/icons/Room';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\r\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\r\nimport DirectionsIcon from '@material-ui/icons/Directions';\r\n\r\nimport \"./RoutingMenu.css\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nfunction TabPanel(props) {\r\n    const {children, value, index, ...other} = props;\r\n\r\n    return (\r\n        <Typography\r\n            component=\"div\"\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && <Box p={3}>{children}</Box>}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nexport default function RoutingMenu() {\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <div className=\"RoutingMenu\">\r\n            <Paper square elevation={3}>\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    variant=\"scrollable\"\r\n                    scrollButtons=\"auto\"\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    aria-label=\"icon tabs example\"\r\n                >\r\n                    <Tab icon={<DirectionsBusIcon/>} aria-label=\"bus\"/>\r\n                    <Tab icon={<DirectionsBoatIcon/>} aria-label=\"ferry\"/>\r\n                    <Tab icon={<RowingIcon/>} aria-label=\"gondola\"/>\r\n                    <Tab icon={<TramIcon/>} aria-label=\"tram\"/>\r\n                    <Tab icon={<DirectionsRailwayIcon/>} aria-label=\"rail\"/>\r\n                    <Tab icon={<DirectionsSubwayIcon/>} aria-label=\"funicular\"/>\r\n                    <Tab icon={<CallMergeIcon/>} aria-label=\"cable_car\"/>\r\n                    <Tab icon={<SubwayIcon/>} aria-label=\"subway\"/>\r\n                </Tabs>\r\n                <TabPanel>\r\n                    <Grid container spacing={1} alignItems=\"flex-end\" style={{width: '100%'}}>\r\n                        <Grid item xs={1}>\r\n                            <Adjust fontSize=\"small\" color=\"secondary\"/>\r\n                        </Grid>\r\n                        <Grid item xs={10}>\r\n                            <TextField style={{width: '100%'}} id=\"standard-secondary\" label=\"Source\"\r\n                                       color=\"secondary\"/>\r\n                        </Grid>\r\n                        <Grid item xs={1}>\r\n                            <IconButton className=\"addHop\" color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                                <AddCircleOutlineIcon />\r\n                            </IconButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={1} alignItems=\"flex-end\" style={{width: '100%'}}>\r\n                        <Grid item xs={1}>\r\n                            <RadioButtonCheckedIcon fontSize=\"small\" color=\"secondary\"/>\r\n                        </Grid>\r\n                        <Grid item xs={9}>\r\n                            <TextField style={{width: '100%'}} id=\"standard-secondary\" label=\"Hop\" color=\"secondary\"/>\r\n                        </Grid>\r\n                        <Grid item xs={1}>\r\n                            <IconButton className=\"addHop\" color=\"secondary\" aria-label=\"upload picture\" component=\"span\">\r\n                                <RemoveCircleOutlineIcon />\r\n                            </IconButton>\r\n                        </Grid>\r\n                        <Grid item xs={1}>\r\n                            <IconButton className=\"addHop\" color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                                <AddCircleOutlineIcon />\r\n                            </IconButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={1} alignItems=\"flex-end\" style={{width: '100%'}}>\r\n                        <Grid item xs={1}>\r\n                            <Room color=\"secondary\"/>\r\n                        </Grid>\r\n                        <Grid item xs={10}>\r\n                            <TextField style={{width: '100%'}} id=\"standard-secondary\" label=\"Destination\"\r\n                                       color=\"secondary\"/>\r\n                        </Grid>\r\n                        <Grid item xs={1}>\r\n                            <IconButton className=\"addHop\" color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                                <DirectionsIcon />\r\n                            </IconButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                </TabPanel>\r\n            </Paper>\r\n            <hr />\r\n            <Paper square elevation={1}>\r\n                <TabPanel>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        Olten\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" gutterBottom>\r\n                        Otlen Hammer\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" gutterBottom>\r\n                        Wangen bei Otlen\r\n                    </Typography>\r\n                </TabPanel>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import Map from \"./Map\";\r\n\r\nexport default Map;","import React, {Component} from 'react';\r\nimport L from 'leaflet';\r\nimport RoutingMenu from \"../RoutingMenu/RoutingMenu\";\r\nimport \"./Map.css\";\r\n\r\nclass Map extends Component {\r\n    componentDidMount() {\r\n        const applicationVersion = `${process.env.REACT_APP_NAME} ${process.env.REACT_APP_VERSION}`;\r\n        const stamenTonerLite = L.tileLayer('https://stamen-tiles-{s}.a.ssl.fastly.net/toner-lite/{z}/{x}/{y}{r}.{ext}', {\r\n            attribution: applicationVersion + ' | Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\r\n            subdomains: 'abcd',\r\n            minZoom: 0,\r\n            maxZoom: 20,\r\n            ext: 'png'\r\n        });\r\n\r\n        this.map = L.map('map', {\r\n            center: [25, 25],\r\n            zoom: 4,\r\n            zoomControl: false,\r\n            layers: [stamenTonerLite]\r\n        });\r\n        L.control.zoom({\r\n            position: 'topright'\r\n        }).addTo(this.map);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <RoutingMenu/>\r\n                <div id=\"map\" className=\"map\"/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Map;","import React from 'react';\r\nimport Map from \"../Map\";\r\n\r\nfunction GeopsRoutingDemo() {\r\n    return (\r\n        <Map />\r\n    );\r\n}\r\n\r\nexport default GeopsRoutingDemo;\r\n","import GeopsRoutingDemo from \"./GeopsRoutingDemo\";\r\n\r\nexport default GeopsRoutingDemo;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport GeopsRoutingDemo from './Components';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst geopsRoutingDemo =\r\n    <GeopsRoutingDemo\r\n        mots=\"rail,bus,tram\"\r\n        routingUrl=\"https://api.geops.io/routing/v1/\"\r\n        stationSearchUrl=\"https://api.geops.io/stops/v1/\"\r\n        key=\"5cc87b12d7c5370001c1d655d0a18192eba64838a5fa1ad7d482ab82\"\r\n    />;\r\nReactDOM.render(geopsRoutingDemo, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}